runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
View(full_data)
runApp('~/Documents/Code/mriqception/shiny_app/mriqception_app')
knitr::opts_chunk$set(echo = TRUE)
library(rmatio)
library(psych)
library(pcaMethods)
library(tidyverse)
library(readxl)
library(caret)
library(reticulate)
se <- function(x) {
sd(x,na.rm=TRUE)/sqrt(length(x[!is.na(x)]))
}
source("dissim_imputation_utils.R")
full_vec_rdm <- py$all_vec_rdm
full_sq_rdm <- py$all_sq_rdm
full_vec_rdm <- py$all_vec_rdm
full_sq_rdm[is.nan(full_sq_rdm)] <- NA
full_vec_rdm[is.nan(full_vec_rdm)] <- NA
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
rdm_observed_masks <- find_unobserved_pairs(base_all_pairs)
bpca_allPCs_list <- list()
for (sub in seq.int(1,5)){
data <- full_sq_rdm[,,sub]
data[is.na(rdm_observed_masks[["only_observed"]])] <- NA
bpca_allPCs_list[[sub]] <- do_bpca(data, 120)
}
bpca_reducedPCs_list <- list()
for (sub in seq.int(1,5)){
data <- full_sq_rdm[,,sub]
data[is.na(rdm_observed_masks[["only_observed"]])] <- NA
if (bpca_allPCs_list[[sub]][["reduced_nPCs"]] == Inf){
nPCs <- 19
}else(
nPCs <- bpca_allPCs_list[[sub]][["reduced_nPCs"]]
)
bpca_reducedPCs_list[[sub]] <- do_bpca(data, nPCs)
}
View(bpca_allPCs_list)
bpca_allPCs_list[[4]]
prediction_list <- list()
for (sub in seq.int(1,5)){
prediction_list[[sub]] <- do_prediction(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
indir_sim_list <- list()
for (sub in seq.int(1,5)){
data <- full_sq_rdm[,,sub]
data[is.na(rdm_observed_masks[["only_observed"]])] <- NA
indir_sim_list[[sub]] <- do_indir_sim(data)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
svr_list <- list()
for (sub in seq.int(1,5)){
svr_list[[sub]] <- do_svr(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
svr_list <- list()
for (sub in seq.int(1,5)){
svr_list[[sub]] <- do_svr(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
indir_sim_list <- list()
for (sub in seq.int(1,5)){
data <- full_sq_rdm[,,sub]
data[is.na(rdm_observed_masks[["only_observed"]])] <- NA
indir_sim_list[[sub]] <- do_indir_sim(data)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], indir_sim_list[[sub]])
}
plot_sim_measure(base_all_pairs, "word2vec")
t.test(base_all_pairs$word2vec[1:30], base_all_pairs$word2vec[31:60])
plot_sim_measure(base_all_pairs, "LSA")
t.test(base_all_pairs$LSA[1:30], base_all_pairs$LSA[31:60])
#mean related = 0.5, mean unrelated = 0.16; split at 0.3
for (sub in seq.int(1,5)){
p <- plot_2_measures(full_sq_rdm[,,sub], "observed dissimilarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "dissim")
print(p)
print(t.test(all_pairs_list[[sub]]$dissim[1:30], all_pairs_list[[sub]]$dissim[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "imputed")
print(p)
print(t.test(all_pairs_list[[sub]]$imputed[1:30], all_pairs_list[[sub]]$imputed[31:60]))
}
View(bpca_reducedPCs_list)
for (sub in seq.int(1,5)){
p <- plot_2_measures(bpca_reducedPCs_list[[sub]]$imputed, "BPCA imputations", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
View(all_pairs_list)
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "imputed")
print(p)
print(t.test(all_pairs_list[[sub]]$predicted[1:30], all_pairs_list[[sub]]$predicted[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "predicted")
print(p)
print(t.test(all_pairs_list[[sub]]$predicted[1:30], all_pairs_list[[sub]]$predicted[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "indirect_similarity")
print(p)
print(t.test(all_pairs_list[[sub]]$indirect_similarity[1:30], all_pairs_list[[sub]]$indirect_similarity[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_2_measures(indir_sim_list[[sub]]$imputed, "indirect similarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
for (sub in seq.int(1,5)){
p <- plot_2_measures(indir_sim_list[[sub]], "indirect similarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
View(all_pairs_list)
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
temp <- cor.test(all_pairs_list[[1]]$LSA, all_pairs_list[[1]]$imputed)
View(temp)
temp
corr_results <- cor.test(all_pairs$dissim, all_pairs[[measure]])
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
View(all_pairs_list)
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "imputed")
print(p)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "imputed")
print(p)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "imputed")
print(p)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "imputed")
print(p)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "imputed")
print(p)
}
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "predicted")
print(p)
}
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "predicted")
print(p)
}
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "indirect_similarity")
print(p)
}
View(prediction_list)
for (sub in seq.int(1,5)){
p <- plot_2_measures(prediction_list[[sub]]$square, "Linear regression predicted", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
for (sub in seq.int(1,5)){
p <- plot_2_measures(full_sq_rdm[,,sub], "observed dissimilarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- plot_2_measures(full_sq_rdm[,,sub], "observed dissimilarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
data <- full_sq_rdm[,,1]
mask <- rdm_observed_masks[["only_observed"]]
tuneGrid = expand.grid(cost = seq(0, 2, length = 20))
# mask should be only observed data
full_data <- data.frame(word2vec_data = as.vector(as.matrix(word2vec)),rdm = as.vector(as.matrix(data)), mask = as.vector(as.matrix(mask)))
na.mark <- !is.na(mask)
na.mark <- as.logical(na.mark)
masked_data <- full_data[na.mark,]
pred_data <- full_data[!na.mark,]
train.control <- trainControl(method = "cv", number = 10, )
model <- train(rdm ~ word2vec_data, data = masked_data, method = "svmLinear2",
trControl = train.control, tuneGrid = tuneGrid, metric="RMSE")
train.control <- trainControl(method = "cv", number = 10)
model <- train(rdm ~ word2vec_data, data = masked_data, method = "lm",
trControl = train.control, metric = "RMSE")
View(model)
model
full_data$predictions <- predict(model, full_data)
View(full_data)
View(pred_data)
pred_data$predictions <- predict(model, pred_data)
View(pred_data)
metrics <- postResample(pred = pred_data$predictions, obs = pred_data$rdm)
metrics
metrics$RMSE
metrics[1]
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
gamma = 10^-2,
cost = 10^2,
tunecontrol=tune.control(cross=10))
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
gamma = 10^-2,
cost = 10^2,
tunecontrol=e1017::tune.control(cross=10))
library(e1071)
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
gamma = 10^-2,
cost = 10^2,
tunecontrol=e1071::tune.control(cross=10))
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
kernel = "radial",
ranges =list(cost=c(0.001,0.01,0.1, 1,5,10,100),
gamma = c(0.001,0.01,0.1, 1,5,10,100)),
tunecontrol=e1071::tune.control(cross=10))
?tune.sv
?tune.svm
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
kernel = "radial",
cost=c(0.001,0.01,0.1, 1,5,10,100),
gamma = c(0.001,0.01,0.1, 1,5,10,100),
tunecontrol=e1071::tune.control(cross=10))
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
kernel = "radial",
cost=c(0.001,0.01,0.1, 1,5,10,100),
gamma = c(0.001,0.01,0.1, 1,5,10,100))
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
tuned <- e1071::tune.svm(rdm ~ word2vec_data, data = masked_data,
kernel = "radial",
cost=c(0.001,0.01,0.1, 1,5,10,100),
epsilon =seq(0,1,0.1))
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "predicted")
print(p)
print(t.test(all_pairs_list[[sub]]$predicted[1:30], all_pairs_list[[sub]]$predicted[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "predicted")
print(p)
print(t.test(all_pairs_list[[sub]]$predicted[1:30], all_pairs_list[[sub]]$predicted[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_2_measures(indir_sim_list[[sub]], "indirect similarity", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
model <- e1071::svm(rdm ~ word2vec_data, data = masked_data)
model <- e1071::svm(rdm ~ word2vec_data, data = masked_data, kernel = "radial")
View(model)
seq(0,1,0.1)
View(masked_data)
tuned <- e1071::tune(svm, rdm ~ word2vec_data,
data = masked_data,
kernel = "radial",
ranges = list(cost=c(0.001,0.01,0.1, 1,5,10,100),
epsilon =seq(0,1,0.1)))
tuned <- e1071::tune(svm, rdm ~ word2vec_data,
data = masked_data,
#kernel = "radial",
ranges = list(cost=c(0.001,0.01,0.1, 1,5,10,100),
epsilon =seq(0,1,0.1)))
tuned <- e1071::tune(svm, rdm ~ word2vec_data,
data = masked_data,
kernel = "radial",
ranges = list(cost=c(0.001,0.01,0.1, 1,5,10,100),
epsilon =seq(0,1,0.1)))
tuned <- e1071::tune(svm, rdm ~ word2vec_data,
data = masked_data,
kernel = "radial",
ranges = list(cost=c(0.001,0.01,0.1, 1,5,10,100),
epsilon =seq(0,1,0.1)),
tunecontrol = tune.control(sampling = "cross", cross=10))
tuned$best.model
best_model <- tuned$best.model
pred_data$predictions <- e1071::predict(best_model, pred_data)
full_data$predictions <- e1071::predict(best_model, full_data)
pred_data$predictions <- predict(best_model, pred_data)
pred_data$predictions <- predict(best_model, pred_data$rdm)
pred_data$predictions <- predict(best_model, pred_data)
full_data$predictions <- predict(best_model, full_data$rdm)
predict(best_model, pred_data)
View(pred_data)
masked_data <- full_data[na.mark,]
pred_data <- full_data[!na.mark,]
predict(best_model, pred_data)
View(best_model)
best_model[["call"]]
print(tuned)
plot(tuneResult)
plot(tuned)
best_model <- tuned$best.model
pred_data$predictions <- predict(best_model, masked_data)
predict(best_model, masked_data)
View(masked_data)
masked_data <- full_data[na.mark,]
pred_data <- full_data[!na.mark,]
pred_data[,1:2]
predict(best_model, pred_data[,1:2])
pred_data$predictions <- predict(best_model, pred_data[,1:2])
full_data$predictions <- predict(best_model, full_data[,1:2])
View(full_data)
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
svr_list <- list()
pred_data$predictions <- predict(best_model, pred_data[,1:2])
full_data$predictions <- predict(best_model, full_data[,1:2])
full_data$observed[is.na(full_data$mask)] <- "predicted"
full_data$observed[!is.na(full_data$mask)] <- "observed"
full_data$observed <- as.factor(full_data$observed)
square_predicted <- matrix(full_data$predictions, nrow=120, ncol=120)
error <- pred_data$rdm - pred_data$predictions
svr_list[[1]] <- list(vec = full_data,
square = square_predicted,
RMSE = e1071::rmse(error, pred_data$rdm),
model = best_model)
rmse(error)
sqrt(mean(error^2))
svr_list[[1]] <- list(vec = full_data,
square = square_predicted,
RMSE = sqrt(mean(error^2)),
model = best_model)
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
pred_data$predictions <- predict(best_model, pred_data[,1:2])
full_data$predictions <- predict(best_model, full_data[,1:2])
full_data$observed[is.na(full_data$mask)] <- "predicted"
full_data$observed[!is.na(full_data$mask)] <- "observed"
full_data$observed <- as.factor(full_data$observed)
square_predicted <- matrix(full_data$predictions, nrow=120, ncol=120)
error <- pred_data$rdm - pred_data$predictions
svr_list[[1]] <- list(vec = full_data,
+                       square = square_predicted,
+                       RMSE = sqrt(mean(error^2)),
+                       model = best_model)
svr_list[[1]] <- list(vec = full_data,
+                       square = square_predicted,
+                       RMSE = sqrt(mean(error^2)),
+                       model = best_model)
svr_list[[1]] <- list(vec = full_data,
+                       square = square_predicted,
+                       RMSE = sqrt(mean(error^2)),
+                       model = best_model)
svr_list[[1]] <- list(vec = full_data, square = square_predicted, RMSE = sqrt(mean(error^2)), model = best_model)
for (sub in seq.int(2,5)){
svr_list[[sub]] <- do_svr(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
for (sub in seq.int(2,5)){
print(paste0("starting subject: ", sub))
svr_list[[sub]] <- do_svr(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
View(svr_list)
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], svr_list[[sub]][["sqaure"]], indir_sim_list[[sub]])
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "svr")
print(p)
print(t.test(all_pairs_list[[sub]]$svr[1:30], all_pairs_list[[sub]]$svr[31:60]))
}
View(all_pairs_list)
View(all_pairs_list)
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], svr_list[[sub]][["sqaure"]], indir_sim_list[[sub]])
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "svr")
print(p)
print(t.test(all_pairs_list[[sub]]$svr[1:30], all_pairs_list[[sub]]$svr[31:60]))
}
View(all_pairs_list)
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
source('~/Documents/Code/Testing_Effect/dissim_imputation_utils.R')
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
rdm_observed_masks <- find_unobserved_pairs(base_all_pairs)
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "svr")
print(p)
print(t.test(all_pairs_list[[sub]]$svr[1:30], all_pairs_list[[sub]]$svr[31:60]))
}
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], svr_list[[sub]][["sqaure"]], indir_sim_list[[sub]])
}
View(svr_list)
View(all_pairs_list)
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
rdm_observed_masks <- find_unobserved_pairs(base_all_pairs)
View(base_all_pairs)
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], svr_list[[sub]][["sqaure"]], indir_sim_list[[sub]])
}
all_pairs_list <- list()
for (sub in seq.int(1,5)){
all_pairs_list[[sub]] <- get_subj_vals(base_all_pairs, all_words, full_sq_rdm[,,sub], bpca_reducedPCs_list[[sub]][["imputed"]], prediction_list[[sub]][["square"]], svr_list[[sub]][["square"]], indir_sim_list[[sub]])
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "svr")
print(p)
print(t.test(all_pairs_list[[sub]]$svr[1:30], all_pairs_list[[sub]]$svr[31:60]))
}
for (sub in seq.int(1,5)){
p <- plot_2_measures(svr_list[[sub]]$square, "SVR predicted", word2vec, "word2vec", rdm_observed_masks[["only_observed"]])
print(p)
}
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "svr")
print(p)
}
for (sub in seq.int(1,5)){
p <- comp_calc_vs_true(all_pairs_list[[sub]], "predicted")
print(p)
}
for (sub in seq.int(1,5)){
p <- plot_sim_measure(all_pairs_list[[sub]], "predicted")
print(p)
print(t.test(all_pairs_list[[sub]]$predicted[1:30], all_pairs_list[[sub]]$predicted[31:60]))
}
View(prediction_list)
prediction_list <- list()
for (sub in seq.int(1,5)){
prediction_list[[sub]] <- do_prediction(full_sq_rdm[,,sub], word2vec, rdm_observed_masks[["only_observed"]])
}
View(prediction_list)
View(svr_list)
rmse_comp <- data.frame(matrix(nrow =2, ncol=5))
for (sub in seq.int(1,5)){
rmse_comp[1, sub] <- prediction_list[[sub]][["RMSE"]][["RMSE"]]
rmse_comp[2,sub] <- svr_list[[sub]][["RMSE"]]
}
rownames(rmse_comp) <- c("SLR", "SVR")
print(rmse_comp)
library(rmatio)
library(psych)
library(pcaMethods)
library(tidyverse)
library(readxl)
library(caret)
library(e1071)
library(reticulate)
se <- function(x) {
sd(x,na.rm=TRUE)/sqrt(length(x[!is.na(x)]))
}
source("dissim_imputation_utils.R")
full_sq_rdm <- py$all_sq_rdm
full_vec_rdm <- py$all_vec_rdm
full_sq_rdm[is.nan(full_sq_rdm)] <- NA
full_vec_rdm[is.nan(full_vec_rdm)] <- NA
word2vec <- get_word2vec()
LSA <- get_LSA()
all_words <- get_allwords()
base_all_pairs <- create_base_all_words(word2vec, LSA)
rdm_observed_masks <- find_unobserved_pairs(base_all_pairs)
